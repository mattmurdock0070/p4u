[{"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\index.js":"1","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\App.js":"2","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\AnimatedRoutes.js":"3","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\LoginForm.js":"4","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Home.js":"5","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\RegisterForm.js":"6","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Message.js":"7","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Initial.js":"8","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Footer.js":"9","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Header.js":"10","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Button.js":"11","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\hooks\\useMediaQuery.js":"12","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\AdminHome.js":"13","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\addanimal.js":"14","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\viewanimal.js":"15","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\querypage.js":"16","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\responses.js":"17","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\getuserdetails.js":"18","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\payment.js":"19","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Userhome.js":"20","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Spinner.js":"21","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\editanimal.js":"22","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\contexts\\usercontext.js":"23","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\contexts\\auth.js":"24"},{"size":267,"mtime":1685022257288,"results":"25","hashOfConfig":"26"},{"size":422,"mtime":1687435297199,"results":"27","hashOfConfig":"26"},{"size":2019,"mtime":1687416702419,"results":"28","hashOfConfig":"26"},{"size":4532,"mtime":1687438455358,"results":"29","hashOfConfig":"26"},{"size":2971,"mtime":1687416333155,"results":"30","hashOfConfig":"26"},{"size":6156,"mtime":1687438850748,"results":"31","hashOfConfig":"26"},{"size":5818,"mtime":1687416552194,"results":"32","hashOfConfig":"26"},{"size":1153,"mtime":1687416305850,"results":"33","hashOfConfig":"26"},{"size":469,"mtime":1687416270282,"results":"34","hashOfConfig":"26"},{"size":3198,"mtime":1687416665822,"results":"35","hashOfConfig":"26"},{"size":180,"mtime":1683799344404,"results":"36","hashOfConfig":"26"},{"size":994,"mtime":1687416025449,"results":"37","hashOfConfig":"26"},{"size":2345,"mtime":1687419996469,"results":"38","hashOfConfig":"26"},{"size":6342,"mtime":1687415632920,"results":"39","hashOfConfig":"26"},{"size":4322,"mtime":1687415977311,"results":"40","hashOfConfig":"26"},{"size":5474,"mtime":1687416740303,"results":"41","hashOfConfig":"26"},{"size":4435,"mtime":1687416223253,"results":"42","hashOfConfig":"26"},{"size":3760,"mtime":1687415930761,"results":"43","hashOfConfig":"26"},{"size":2855,"mtime":1687416713148,"results":"44","hashOfConfig":"26"},{"size":2343,"mtime":1687416764712,"results":"45","hashOfConfig":"26"},{"size":188,"mtime":1687084782536,"results":"46","hashOfConfig":"26"},{"size":6575,"mtime":1687415867538,"results":"47","hashOfConfig":"26"},{"size":1417,"mtime":1687414874606,"results":"48","hashOfConfig":"26"},{"size":2154,"mtime":1686930819532,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"71c18z",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"53"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"53"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"53"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"53"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"53"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"53"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"53"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\index.js",[],[],[],"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\App.js",[],[],"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\AnimatedRoutes.js",["140"],[],"import { Route, Routes, useLocation, Navigate } from \"react-router-dom\";\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nimport { AuthProvider } from \"../contexts/auth\";\r\n\r\nimport Initial from './Initial';\r\nimport LoginForm from \"./LoginForm.js\";\r\nimport Home from \"./Home.js\";\r\nimport Message from \"./Message.js\";\r\nimport RegisterForm from \"./RegisterForm.js\";\r\nimport Footer from \"./Footer\";\r\nimport AdminHome from \"./adminPages/AdminHome\"\r\nimport Editanimal from \"./adminPages/editanimal\"\r\nimport Addanimal from \"./adminPages/addanimal\"\r\nimport Viewanimal from \"./adminPages/viewanimal\"\r\nimport Querypage from \"./querypage\";\r\nimport Payment from \"./payment\";\r\nimport Responses from \"./adminPages/responses\"\r\nimport Userdetail from \"./adminPages/getuserdetails.js\"\r\nimport Userhome from \"./Userhome.js\";\r\n\r\nconst AnimatedRoutes = () => {\r\n  const location = useLocation();\r\n\r\n  \r\n\r\n  return (\r\n    <AnimatePresence exitBeforeEnter>\r\n      <AuthProvider>\r\n        \r\n        <Routes location={location} key={location.pathname}>\r\n          <Route exact path='/' element={<Initial />} />\r\n          <Route path='/login' element={<LoginForm />} />\r\n          <Route path='/register' element={<RegisterForm />} />\r\n          <Route path='/pets' element={<Home />} />\r\n          <Route path='/editanimal' element={<Editanimal/>} />\r\n          <Route path='/profile' element={<Message />} />\r\n          <Route path='/adminhome' element={<AdminHome/>} />\r\n          <Route path='/addanimal' element={<Addanimal/>} />\r\n          <Route path='/viewanimal' element={<Viewanimal/>} />\r\n          <Route path='/querypage' element={<Querypage/>} />\r\n          <Route path='/responses' element={<Responses/>} />\r\n          <Route path='/payment' element={<Payment/>} />\r\n          <Route path='/getuserdetail' element={<Userdetail/>} />\r\n          <Route path='/userhome' element={<Userhome/>} />\r\n        </Routes>\r\n        <Footer />\r\n      </AuthProvider>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default AnimatedRoutes;\r\n","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\LoginForm.js",["141","142","143"],[],"\r\nimport { motion } from \"framer-motion\";\r\nimport { useEffect, useContext,useState } from \"react\";\r\nimport { useForm,useController  } from \"react-hook-form\";\r\nimport Cookies from 'universal-cookie'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nimport Button from \"./Button.js\";\r\nimport Select from 'react-select';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nimport { AuthContext } from \"../contexts/auth.js\";\r\nimport SvgComponent from '../assets/logo-no-background.png'\r\nconst cookies = new Cookies();\r\nconst bu=process.env.REACT_APP_BASEURL\r\nconst LoginForm = () => {\r\n\t\r\n\t\r\n\tconst { login } = useContext(AuthContext);\r\n\tconst navigate = useNavigate();\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(bu)\r\n\t\twindow.scrollTo(0, 0)\r\n\t  }, [])\r\n\t\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { errors },\r\n\t\tcontrol\r\n\t} = useForm({\r\n\t\tmode: \"onBlur\",\r\n\t\treValidateMode: \"onChange\",\r\n\t});\r\n\r\n\tconst onSubmit = async(data) => {\r\n\t\t\r\n\t    const { email, password,usertype } = data;\r\n\t\tconst res = await fetch(`${bu}/login`, {\r\n\t\t  method: \"POST\",\r\n\t\t  headers: {\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t  },\r\n\t\t \r\n\t\t  body: JSON.stringify({\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\tusertype\r\n\t\t  }),\r\n\t\t});\r\n\t\r\n\t\tconst dataa = await res.json();\r\n         console.log(dataa.token);\r\n\t\t\r\n\t\t cookies.set(\"jwtoken\", dataa.token, {\r\n\t\t\texpires: new Date(Date.now() + 25892000000),\r\n\t\t\tpath: \"/\",\r\n\t\t  });\r\n\t\t  \r\n\t\t  \r\n\t\tif (dataa.status === 400 || !dataa || dataa.error) {\r\n\t\t  \r\n\t\t\t\tSwal.fire({\r\n\t\t\t\ttitle: 'Error!',\r\n\t\t\t\ttext: 'Please enter valid credentials',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'Retry'\r\n\t\t\t\t})\r\n           \t\t\r\n\t\t\r\n\t\t} else {\r\n\t\t\tconsole.log(usertype);\r\n\t\t\tif(usertype==\"2\")\r\n\t\t\tnavigate(\"/userhome\");\r\n\t\t\telse\r\n\t\t\tnavigate(\"/adminhome\")\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: 'Success!',\r\n\t\t\t\ttext: 'Login Successful',\r\n\t\t\t\ticon: 'success',\r\n\t\t\t\tconfirmButtonText: 'Success',\r\n\t\t\t\ttimer: '2000'\r\n\t\t\t\t})\r\n\t\t\r\n\t\t}\r\n\t\t\r\n\t  };\r\n\r\n\t  \r\n\r\n\tlet element = \"\";\r\n\r\n\tconst changeType = (id) => {\r\n\t\telement = document.querySelector(id);\r\n\t\tif (element.type === \"password\") {\r\n\t\t\telement.setAttribute(\"type\", \"text\");\r\n\t\t} else {\r\n\t\t\telement.setAttribute(\"type\", \"password\");\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\t\r\nconst languageList = [\r\n\t{ value: 1, label: 'Admin' },\r\n\t{ value: 2, label: 'User' }\r\n  ];\r\n  const { field: { value: langValue, onChange: langOnChange, ...restLangField } } = useController({ name: 'usertype', control }); \r\n\r\n\r\n\tuseEffect(() => { }, [element]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t <Header/>\r\n\t\t\r\n\t\t<motion.section\r\n\t\t\tclassName=\"register\"\r\n\t\t\tinitial={{ width: 0 }}\r\n\t\t\tanimate={{ width: \"100%\", transition: { duration: 0.5 } }}\r\n\t\t\texit={{ x: window.innerWidth, transition: { duration: 0.5 } }}\r\n\t\t>\r\n\t\t\t<img src={SvgComponent } alt=\"\" />\r\n\t\t\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n\t\t\t<label>Select Role</label>\r\n      <Select\r\n        className='select-input'\r\n        placeholder=\"Select User Type\"\r\n        isClearable\r\n        options={languageList}\r\n        value={langValue ? languageList.find(x => x.value === langValue) : langValue}\r\n        onChange={option => langOnChange(option ? option.value : option)}\r\n        {...restLangField}\r\n      />\r\n      {errors.usertype && <p>{errors.usertype.message}</p>}\r\n\r\n\r\n\r\n\r\n\t\t\t\t<label htmlFor=\"email\">E-mail</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t{...register(\"email\", {\r\n\t\t\t\t\t\trequired: \"An email address is required\",\r\n\t\t\t\t\t\tpattern:\r\n\t\t\t\t\t\t\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tplaceholder=\"Enter your email\"\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.email && (\r\n\t\t\t\t\t<p className=\"error\">\r\n\t\t\t\t\t\t{errors.email.message || \"Por favor, verifique o email digitado\"}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<label htmlFor=\"pass\">Password</label>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonClick={() => changeType(\"#pass\")}\r\n\t\t\t\t\t\tclassName=\"pass__view\"\r\n\t\t\t\t\t></span>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"pass\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t{...register(\"password\", {\r\n\t\t\t\t\t\t\trequired: \"Enter correct password\",\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tplaceholder=\"Enter your password\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t\t{errors.password && (\r\n\t\t\t\t\t<p className=\"error\">\r\n\t\t\t\t\t\t{errors.password.message }\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t\r\n\t\t\t\t<Button type=\"submit\" children=\"Enter\" />\r\n\t\t\t\t<p>Don't have an account yet?</p>\r\n\t\t\t\t<a href=\"/register\" className=\"register__newUser\">Make your registration</a>\r\n\t\t\t</form>\r\n\t\t</motion.section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default LoginForm;\r\n",[],"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Home.js",["144","145","146"],[],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useState from 'react-usestateref'\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst Viewanimal = () => {\r\n    const [petsdata,setpetsdata,ref]=useState([{}]);\r\n\r\n    useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n    }, [])\r\n    const getanimals = async () => {\r\n\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/getanimals\", {\r\n            method: \"GET\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            \r\n          });\r\n         \r\n          if (res.status === 401) {\r\n          \r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n          const data = await res.json();\r\n          setpetsdata(data);\r\n          console.log(ref.current);\r\n          \r\n          \r\n        } catch (err) {\r\n          navigate(\"/login\");\r\n          \r\n        }\r\n      };\r\n\r\n    \r\n\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n  const cookies = new Cookies();\r\n  const token = cookies.get(\"jwtoken\");\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      \r\n      const data = await res.json();\r\n\r\n      \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n     \r\n      \r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n     \r\n\r\n  useEffect(() => {\r\n    login();\r\n    getanimals();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n    <Header/>\r\n    <motion.section className='home' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      <p>Hello!<br /> See friends available for adoption!</p>\r\n      <div className='cards'>\r\n        {\r\n          ref.current.map((pet, i) => (\r\n            <div key={i} className='card'>\r\n            <img src={pet.img} alt={pet.name} />\r\n            <h4>{pet.name}</h4>\r\n            <ul>\r\n              <li>{pet.age}</li>\r\n              <li>{pet.size}</li>\r\n              <li>{pet.behavior}</li>\r\n                \r\n              </ul>\r\n            \r\n              <p className='card__city'>{pet.city}</p>\r\n              <Link className='card__contact' to=\"/querypage\" state={pet}>Talk to person in charge</Link>\r\n             \r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </motion.section >\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Viewanimal;","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\RegisterForm.js",["147","148","149","150","151"],[],"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Message.js",["152","153"],[],"\r\nimport Button from './Button';\r\nimport React, {  useEffect } from \"react\";\r\nimport useState from 'react-usestateref'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Header from \"./Header\";\r\n\r\nimport loggedUser from '../assets/usernew.png';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst Message = () => {\r\n  const location = useLocation();\r\n\r\n\r\n const [data,setuserdata,ref]=useState([]);\r\n \r\n  const navigate = useNavigate();\r\n  const cookies = new Cookies();\r\n  const token = cookies.get(\"jwtoken\");\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n     \r\n      setuserdata(data);\r\n     \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n    \r\n      \r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    login();\r\n  }, []);\r\n  let name, value;\r\n\r\n  const handleEdit = (e) => {\r\n    console.log(\"helo\");\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n    setuserdata({ ...data, [name]: value });\r\n  };\r\n\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    mode: 'onBlur',\r\n    reValidateMode: 'onChange'\r\n  });\r\n\r\n\r\n\r\n  const handleFileUpload = async (e) => {\r\n    console.log(\"helo\");\r\n    const file = e.target.files[0];\r\n    const base64 = await convertToBase64(file);\r\n    console.log(base64)\r\n    setuserdata({ ...data, image : base64 })\r\n    \r\n  }\r\n\r\n\r\n  const onSubmit = async(data) => {\r\n   \r\n    \r\n    \r\n      const _id=ref.current._id;\r\n      const name=ref.current.name;\r\n      const phone=ref.current.phone;\r\n      const city=ref.current.city;\r\n      const message=ref.current.message;\r\n      const image=ref.current.image;\r\n\r\n    \r\n      const res = await fetch(`http://localhost:5000/editform/${_id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          phone: phone,\r\n          city: city,\r\n      message:message,\r\n      image:image,\r\n        }),\r\n      });\r\n  \r\n    const dataa = await res.json();\r\n   console.log(dataa);\r\n   \r\n    if(dataa.error||dataa.status === 422 || dataa.status===400|| dataa.status===404||dataa.status===500)\r\n    {\r\n      Swal.fire({\r\n\t\t\t\ttitle: 'Error!',\r\n\t\t\t\ttext: 'Please enter valid details',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'Retry'\r\n\t\t\t\t})\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: 'Updation Successful',\r\n          icon: 'success',\r\n          confirmButtonText: 'Success',\r\n          timer: '2000'\r\n          })\r\n          if(ref.current.usertype==='1')\r\n          navigate(\"/adminhome\")\r\n          else\r\n          navigate(\"/userhome\")\r\n      }\r\n     \r\n    };\r\n\r\n  return (\r\n    <>\r\n   <Header/>\r\n    <motion.section className='message' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      {\r\n           <>\r\n           { ref.current.usertype ==='2' && <p>This is the profile that appears to officials or NGOs that receive your message.</p>}\r\n            <form onSubmit={handleSubmit(onSubmit)} >\r\n              <legend>Profile</legend>\r\n\r\n\r\n             <label htmlFor=\"image\">\r\n          <img src={ref.current.image||loggedUser} alt=\"\" />\r\n        </label>\r\n\r\n        <input \r\n          type=\"file\"\r\n          name=\"image\"\r\n          id='image'\r\n          accept='.jpeg, .png, .jpg'\r\n          {...register('image', { })}\r\n          onChange={(e) => handleFileUpload(e)}\r\n         />\r\n\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input id='name'  type=\"text\" {...register(\"name\", {  maxLength: { value: 40, message: 'The maximum number of characters is 25' } })} value={ref.current.name}  placeholder='Enter your full name'  onChange={handleEdit} />\r\n              {errors.name && <p className=\"error\">{errors.name.message}</p>}\r\n\r\n              <label htmlFor=\"phone\">Telephone</label>\r\n              <input type=\"tel\" id='phone' {...register('phone', { pattern: /\\(?[1-9]{2}\\)?\\s?9?[0-9]{8}/ })} placeholder='Enter your phone number' value={ref.current.phone} onChange={handleEdit} />\r\n              {errors.phone && <p className=\"error\">{errors.phone.message || 'Please verify the number entered'}</p>}\r\n\r\n              <label htmlFor=\"city\">Address</label>\r\n              <input type=\"text\" id='city' {...register('city', { })} placeholder='Enter your Address' value={ref.current.city} onChange={handleEdit}  />\r\n\r\n              <label htmlFor=\"about\">About</label>\r\n              <textarea spellCheck='false' name=\"about\" id=\"about\" cols=\"30\" rows=\"8\" value={ref.current.message} placeholder='Enter your message or other details you wish to share' {...register('message', {})} onChange={handleEdit}></textarea>\r\n\r\n              <Button type='submit' children='UPDATE' />\r\n            </form>\r\n          </>\r\n        \r\n      }\r\n    </motion.section>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction convertToBase64(file){\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result)\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport default Message;\r\n\r\n","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Initial.js",["154"],[],"import { Link } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport Header from \"./Header\";\r\n\r\nimport { Helmet } from 'react-helmet';\r\nimport SvgComponent from '../assets/logo-no-background3.png'\r\nimport useMediaQuery from '../hooks/useMediaQuery';\r\n\r\nconst Home = () => {\r\n  const matches = useMediaQuery('(max-width: 767px)');\r\n\r\n  return (\r\n    <>\r\n    <Header/>\r\n    <motion.section className='initial' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      <Helmet>\r\n        <style>{\"body { background-color: #3874ff; }\"}</style>\r\n      </Helmet>\r\n      <img src={ SvgComponent } alt=\"Logo \" />\r\n      <h3>Welcome!</h3>\r\n      <p>\r\n        Adopting can change a life. How about picking up your new best friend today? Come with us!\r\n      </p>\r\n      <div className='home__buttons'>\r\n        <Link className='button' to='/login'><b>Login</b></Link>\r\n        <br></br>\r\n        <Link className='button' to='/register'><b>Register</b></Link>\r\n       \r\n      </div>\r\n    </motion.section >\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Footer.js",[],[],"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Header.js",["155","156","157"],[],"import {  useEffect, useState } from 'react';\r\nimport { Link, useLocation,useNavigate } from 'react-router-dom';\r\nimport { Menu } from '@headlessui/react';\r\nimport Cookies from \"universal-cookie\";\r\nimport loggedUser from '../assets/usernew.png';\r\nimport Button from './Button';\r\nimport Swal from 'sweetalert2'\r\nimport SvgComponent from '../assets/logo-no-background1.png'\r\nimport Spinner from \"./Spinner\"\r\nconst Header = () => {\r\n  const location = useLocation();\r\n  \r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  const navigate = useNavigate();\r\n  const [data, setdata] = useState({\r\n    image:loggedUser,\r\n  });\r\nconst[page,setpage]=useState(\"/userhome\")\r\n\r\nuseEffect(() => {\r\n  window.scrollTo(0, 0)\r\n}, [])\r\n\r\n\r\n\r\n  const cookies = new Cookies();\r\n  const token = cookies.get(\"jwtoken\");\r\n  const[auth,setauth]=useState(false)\r\n\r\n  const login = async () => {\r\n   \r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const dataa = await res.json();\r\n      console.log(\"dataa\");\r\n      console.log(data);\r\n      setdata(dataa);\r\n      setIsLoading(false)   \r\n      if(dataa.usertype === '1')\r\n      setpage(\"/adminhome\")\r\n     \r\n      \r\n    } catch (err) {\r\n     \r\n      \r\n     \r\n    }\r\n  };\r\n\r\n  const handlelogout = () => {\r\n   \r\n    cookies.remove(\"jwtoken\", { path: \"/\" });\r\n    Swal.fire({\r\n      title: 'Success!',\r\n      text: 'Logged Out Successfully',\r\n      icon: 'success',\r\n      confirmButtonText: 'Success',\r\n      timer: '2000'\r\n      })\r\n\r\n        navigate(\"/login\");\r\n       \r\n  };\r\n\r\n\r\n     \r\n\r\n  useEffect(() => {\r\n    login();\r\n    \r\n  }, []);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n    {(isLoading&&(location.pathname === '/querypage'||data.usertype === '1'||location.pathname === '/profile' || location.pathname === '/payment'|| location.pathname === '/userhome' || location.pathname === '/pets')&&<Spinner/>)||\r\n    <header className='header'>\r\n      <nav>\r\n        <div>\r\n          <img className='header__logo' src={SvgComponent} alt=\"\" aria-hidden='true' />\r\n          <Link className='header__home' aria-label='Tela inicial' to={page} ></Link>\r\n         \r\n        </div>\r\n        {(location.pathname === '/querypage'||data.usertype === '1'||location.pathname === '/profile'||location.pathname === '/userhome' || location.pathname === '/pets')&& \r\n        \r\n        <Menu>\r\n          <Menu.Button className=\"menu__button\">\r\n            <img className='header__user' src={data.image||loggedUser} alt=\"Usuário\" />\r\n          </Menu.Button>\r\n          <Menu.Items className='menu__content'>\r\n            <a className='button' href=\"/profile\">View Profile</a>\r\n            <Button handleClick={handlelogout} children=\"Logout\"></Button>\r\n          </Menu.Items>\r\n        </Menu>\r\n        \r\n        \r\n        \r\n        }\r\n      </nav>\r\n    </header>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Button.js",[],[],"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\hooks\\useMediaQuery.js",[],["158"],"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\AdminHome.js",["159","160","161"],[],"import React, { useEffect } from \"react\";\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport useMediaQuery from '../../hooks/useMediaQuery.js';\r\nimport Header from \"../Header\";\r\nimport useState from 'react-usestateref'\r\nimport { Helmet } from 'react-helmet';\r\nimport SvgComponent from '../../assets/logo-no-background3.png'\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\n\r\n\r\nconst AdminHome = () => {\r\n  const matches = useMediaQuery('(max-width: 767px)');\r\n  const navigate = useNavigate();\r\n  const cookies = new Cookies();\r\n  const [data,setuserdata,ref]=useState([]);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n  const token = cookies.get(\"jwtoken\");\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n      setuserdata(data);\r\n    \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n   \r\n      \r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    login();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n    {ref.current.usertype===\"2\"&&navigate(\"/login\")}\r\n    <Header/>\r\n    \r\n    <motion.section className='initial' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n    <Helmet>\r\n      <style>{\"body { background-color: #3874ff; }\"}</style>\r\n    </Helmet>\r\n    <img src={ SvgComponent }  alt=\"Logo \" />\r\n    <h3>Hello Admin!</h3>\r\n    <p>\r\n     'What do you want to do?\r\n    </p>\r\n    <div className='home__buttons'>\r\n      <Link className='button' to='/viewanimal'>View Animal List</Link>\r\n    </div>\r\n    <div className='home__buttons'>\r\n      <Link className='button' to='/addanimal'>Add Animal to List</Link>\r\n    </div>\r\n    <div className='home__buttons'>\r\n      <Link className='button' to='/responses'>See Responses</Link>\r\n      \r\n    </div>\r\n  </motion.section >\r\n  </>\r\n  );\r\n};\r\n\r\nexport default AdminHome;","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\addanimal.js",["162"],[],"import Button from '../Button';\r\nimport React, {  useEffect } from \"react\";\r\nimport useState from 'react-usestateref'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Header from \"../Header\";\r\nimport loggedUser from '../../assets/usernew.png';\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Addanimal = () => {\r\n \r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n  const [data,setuserdata,ref]=useState([]);\r\n  const navigate = useNavigate();\r\n  const cookies = new Cookies();\r\n  const token = cookies.get(\"jwtoken\");\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n      console.log(data);\r\n     \r\n     \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    login();\r\n  }, []);\r\n\r\n  let name, value;\r\n  const handleEdit = (e) => {\r\n  \r\n    name = e.target.name;\r\n    value = e.target.value;\r\n    setuserdata({ ...data, [name]: value });\r\n  };\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    mode: 'onBlur',\r\n    reValidateMode: 'onChange'\r\n  });\r\n\r\n\r\n\r\n  const handleFileUpload = async (e) => {\r\n  \r\n    const file = e.target.files[0];\r\n    const base64 = await convertToBase64(file);\r\n    console.log(base64)\r\n    setuserdata({ ...data, img : base64 })\r\n    \r\n  }\r\n\r\n\r\n\r\n  const onSubmit = async() => {\r\n   \r\n    console.log(data);\r\n   \r\n      const name=ref.current.name;\r\n      const img=ref.current.img;\r\n      const city=ref.current.city;\r\n      const behaviour=ref.current.behaviour;\r\n      const size=ref.current.size;\r\n      const age=ref.current.age;\r\n\r\n   \r\n      const res = await fetch(\"http://localhost:5000/addanimal\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          \r\n         name:name,\r\n         img:img,\r\n         city:city,\r\n         behaviour:behaviour,\r\n         size:size,\r\n         age:age,\r\n\r\n        }),\r\n      });\r\n  \r\n    const dataa = await res.json();\r\n   console.log(dataa);\r\n   \r\n    if(dataa.error||dataa.status === 422 || dataa.status===400|| dataa.status===404||dataa.status===500)\r\n    {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text: 'Some Error occurred',\r\n        icon: 'error',\r\n        confirmButtonText: 'Retry'\r\n        })\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: 'Registration Successful',\r\n          icon: 'success',\r\n          confirmButtonText: 'Success',\r\n          timer: '2000'\r\n          })\r\n          \r\n        navigate(\"/adminhome\")\r\n      }\r\n     \r\n     \r\n  \r\n    };\r\n\r\n  return (\r\n    <>\r\n      <Header/>\r\n   \r\n    <motion.section className='message' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      {\r\n        \r\n          <>\r\n        \r\n            <p>Add a new friend to the list:</p>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n            <label htmlFor=\"img\">\r\n          <img src={ref.current.img||loggedUser} alt=\"\" />\r\n        </label>\r\n\r\n        <input \r\n          type=\"file\"\r\n          name=\"img\"\r\n          id='img'\r\n          accept='.jpeg, .png, .jpg'\r\n          {...register('img', { })}\r\n          onChange={(e) => handleFileUpload(e)}\r\n         />\r\n\r\n\r\n              <label htmlFor=\"name\">Name of pet</label>\r\n              <input id='name' type=\"text\" {...register(\"name\", { required: 'Name is required', maxLength: { value: 40, message: 'The maximum number of characters should be 40' } })} onChange={handleEdit} placeholder='Enter pets name' />\r\n              {errors.name && <p className=\"error\">{errors.name.message}</p>}\r\n              \r\n\r\n\r\n              \r\n\r\n\r\n              \r\n              <label htmlFor=\"city\">city</label>\r\n              <input id='city' type=\"text\" {...register(\"city\", { required: 'City is required',  })} onChange={handleEdit} placeholder='Where does the pet stay?' />\r\n              {errors.city && <p className=\"error\">{errors.city.message}</p>}\r\n\r\n\r\n              <label htmlFor=\"size\">size</label>\r\n              <input id='size' type=\"text\" {...register(\"size\", { required: 'Size is required', maxLength: { value: 40, message: 'The maximum number of characters should be 40' } })} onChange={handleEdit} placeholder='What is the size of pet?' />\r\n              {errors.size && <p className=\"error\">{errors.size.message}</p>}\r\n\r\n\r\n              <label htmlFor=\"age\">Age</label>\r\n              <input id='age' type=\"text\" {...register(\"age\", { required: 'Age is required', maxLength: { value: 25, message: 'The maximum number of characters should be 25' } })} onChange={handleEdit} placeholder='What is the pets age?' />\r\n              {errors.age && <p className=\"error\">{errors.age.message}</p>}\r\n\r\n\r\n              <label htmlFor=\"behaviour\">Behaviour</label>\r\n              <textarea name=\"behaviour\" id=\"behaviour\" cols=\"30\" rows=\"10\" {...register('behaviour', { maxLength: { value: 500, message: 'The maximum number of characters should be 500' } })} onChange={handleEdit} placeholder='Any special behaviour that you want to inform about the pet.' spellCheck='false'></textarea>\r\n              {errors.behaviour && <p className=\"error\">{errors.behaviour.message}</p>}\r\n\r\n             \r\n\r\n\r\n              \r\n\r\n              <Button type='submit' children='Add to list' />\r\n            </form>\r\n          </>\r\n       \r\n      }\r\n    </motion.section>\r\n    </>\r\n  );\r\n};\r\nfunction convertToBase64(file){\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result)\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n\r\nexport default Addanimal;\r\n\r\n","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\viewanimal.js",["163","164","165"],[],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useState from 'react-usestateref'\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"../Header\";\r\nimport loggedUser from '../../assets/usernew.png';\r\nimport Cookies from \"universal-cookie\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nconst Viewanimal = () => {\r\n    const [petsdata,setpetsdata,ref]=useState([{}]);\r\n\r\n    useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n    }, [])\r\n    const getanimals = async () => {\r\n\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/getanimals\", {\r\n            method: \"GET\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            \r\n          });\r\n         \r\n          if (res.status === 401) {\r\n          \r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n          const data = await res.json();\r\n          setpetsdata(data);\r\n          console.log(ref.current);\r\n          \r\n          \r\n        } catch (err) {\r\n          navigate(\"/login\");\r\n          \r\n        }\r\n      };\r\n\r\n    \r\n\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n  const cookies = new Cookies();\r\n  const token = cookies.get(\"jwtoken\");\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n      console.log(data);\r\n      \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n     \r\n      \r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleclick1 =async (elem, idx) => {\r\n   \r\n   \r\n    try {\r\n      const res = await fetch(`http://localhost:5000/deleteanimal/${elem._id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      Swal.fire({\r\n\t\t\t\ttitle: 'Success!',\r\n\t\t\t\ttext: 'Pet Deleted',\r\n\t\t\t\ticon: 'success',\r\n\t\t\t\tconfirmButtonText: 'Success',\r\n\t\t\t\ttimer: '2000'\r\n\t\t\t\t})\r\n      getanimals();\r\n      \r\n    } catch (err) {\r\n      Swal.fire({\r\n\t\t\t\ttitle: 'Error!',\r\n\t\t\t\ttext: 'Deletion Failed',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'Retry'\r\n\t\t\t\t})\r\n      \r\n    }\r\n};\r\n\r\n  const handleclick =async (elem, idx) => {\r\n\r\n\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm!'\r\n  }).then((result) => {\r\n    if (result.dismiss !== 'cancel') {\r\n\r\n      handleclick1(elem,idx);\r\n    }\r\n  \r\n})\r\n\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    login();\r\n    getanimals();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n       <Header/>\r\n  \r\n    <motion.section className='home' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      <p>Hello! <br /> These are the animals available!</p>\r\n      <div className='cards'>\r\n        {\r\n          ref.current.map((pet, i) => (\r\n            <div key={i} className='card'>\r\n            <img src={pet.img||loggedUser} />\r\n            <h4>{pet.name}</h4>\r\n            <ul>\r\n              <li>{pet.age}</li>\r\n              <li>{pet.size}</li>\r\n              <li>{pet.behaviour}</li>\r\n                \r\n              </ul>\r\n            \r\n              <p className='card__city'>{pet.city}</p>\r\n              <Link className='card__contact' to=\"/editanimal\" state={pet}>Edit the animal details</Link>\r\n              <button className='cpb' onClick={() => { handleclick(pet, i); }}>Delete</button>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </motion.section >\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Viewanimal;","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\querypage.js",["166"],[],"\r\nimport Button from './Button';\r\nimport React, {  useEffect } from \"react\";\r\nimport useState from 'react-usestateref'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Header from \"./Header\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nconst Querypage = (props) => {\r\n  const location = useLocation();\r\n\r\n\r\n  const propsData = location.state;\r\n  \r\n\r\n const [data,setuserdata,ref]=useState([]);\r\n \r\n  const navigate = useNavigate();\r\n  const cookies = new Cookies();\r\n  const token = cookies.get(\"jwtoken\");\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setuserdata(data);\r\n     \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n    \r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    login();\r\n  }, []);\r\n  let name, value;\r\n  const handleEdit = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n    setuserdata({ ...data, [name]: value });\r\n  };\r\n\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    mode: 'onBlur',\r\n    reValidateMode: 'onChange'\r\n  });\r\n\r\n  const onSubmit = async(data) => {\r\n   \r\n    \r\n     \r\n     \r\n      const name=ref.current.name;\r\n      const email=ref.current.email;\r\n      const phone=ref.current.phone;\r\n      const animalname=data.animalname;\r\n      const question=data.question;\r\n      const img=ref.current.image;\r\n    \r\n     const res = await fetch(\"http://localhost:5000/questionpost\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          img:img,\r\n          name: name,\r\n          phone: phone,\r\n          email:email,\r\n          animalname:animalname,\r\n          question:question,\r\n        }),\r\n      });\r\n  \r\n    const dataa = await res.json();\r\n   console.log(dataa);\r\n   \r\n    if(dataa.error||dataa.status === 422 || dataa.status===400|| dataa.status===404||dataa.status===500)\r\n    {\r\n      Swal.fire({\r\n\t\t\t\ttitle: 'Error!',\r\n\t\t\t\ttext: 'There eas some error',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'Retry'\r\n\t\t\t\t})\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: 'Messege Sent Successfully',\r\n          icon: 'success',\r\n          confirmButtonText: 'Success',\r\n          timer: '2000'\r\n          })\r\n          navigate(\"/pets\")\r\n        \r\n      }\r\n     \r\n    };\r\n\r\n  return (\r\n    <>\r\n    <Header/>\r\n    <motion.section className='message' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      {\r\n        \r\n          <>\r\n         \r\n          <p>Send a message to the person or institution that is caring for the animal:</p>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n            <label htmlFor=\"name\">Name</label>\r\n              <input id='name'  type=\"text\" {...register(\"name\", {  maxLength: { value: 40, message: 'The maximum number of characters is 25' } })} value={ref.current.name}  placeholder='Enter your full name'  onChange={handleEdit} />\r\n              {errors.name && <p className=\"error\">{errors.name.message}</p>}\r\n\r\n\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input id='email'  type=\"text\" {...register(\"email\", {  maxLength: { value: 40, message: 'O número máximo de caracteres é 40' } })} value={ref.current.email}  placeholder='Insira seu nome completo'  onChange={handleEdit} />\r\n              {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n\r\n\r\n              <label htmlFor=\"phone\">Telephone</label>\r\n              <input type=\"tel\" id='phone' {...register('phone', { pattern: /\\(?[1-9]{2}\\)?\\s?9?[0-9]{8}/ })} placeholder='Enter your phone number' value={ref.current.phone} onChange={handleEdit} />\r\n              {errors.phone && <p className=\"error\">{errors.phone.message || 'Please verify the number entered'}</p>}\r\n\r\n\r\n              <label htmlFor=\"animalname\">Name of animal</label>\r\n              <input id='animalname' type=\"text\"  value={propsData.name}{...register(\"animalname\", { required: 'It is necessary to inform the name of the animal' })} placeholder='What Animal are you interested in?' />\r\n              {errors.animalname && <p className=\"error\">{errors.animalname.message}</p>}\r\n\r\n              <label htmlFor=\"question\">Message</label>\r\n              <textarea name=\"question\" id=\"question\" cols=\"30\" rows=\"10\" {...register('question', { required: 'It is necessary to write a message', maxLength: { value: 500, message: 'Maximum digits can be 500' } })} placeholder='Enter your message' spellCheck='false'></textarea>\r\n              {errors.question && <p className=\"error\">{errors.question.message}</p>}\r\n\r\n              <Button type='submit' children='SEND' />\r\n            </form>\r\n          </>\r\n        \r\n      }\r\n    </motion.section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Querypage;\r\n\r\n","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\responses.js",["167","168"],[],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useState from 'react-usestateref'\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport Header from \"../Header\";\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Responses = () => {\r\n    const [petsdata,setpetsdata,ref]=useState([{}]);\r\n\r\n    \r\n    const getanimals = async () => {\r\n\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/getquestions\", {\r\n            method: \"GET\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            \r\n          });\r\n         \r\n          if (res.status === 401) {\r\n          \r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n          const data = await res.json();\r\n          setpetsdata(data);\r\n          console.log(ref.current);\r\n          \r\n          \r\n        } catch (err) {\r\n          navigate(\"/login\");\r\n          \r\n        }\r\n      };\r\n\r\n    \r\n\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n  const cookies = new Cookies();\r\n  const token = cookies.get(\"jwtoken\");\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n      console.log(data);\r\n      \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n    \r\n      \r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n\r\n  const handleclick1 =async (elem, idx) => {\r\n   \r\n   \r\n      try {\r\n        const res = await fetch(`http://localhost:5000/deletequestion/${elem._id}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          \r\n        });\r\n       \r\n        if (res.status === 401) {\r\n        \r\n          const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: 'Response Deleted',\r\n          icon: 'success',\r\n          confirmButtonText: 'Success',\r\n          timer: '2000'\r\n          })\r\n        getanimals();\r\n        \r\n      } catch (err) {\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text: 'Deletion Failed',\r\n          icon: 'error',\r\n          confirmButtonText: 'Retry'\r\n          })\r\n      }\r\n  };\r\n\r\n  const handleclick =async (elem, idx) => {\r\n\r\n\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      type: 'warning',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm!'\r\n  }).then((result) => {\r\n    if (result.dismiss !== 'cancel') {\r\n\r\n      handleclick1(elem,idx);\r\n    }\r\n   \r\n})\r\n \r\n   \r\n  };\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    login();\r\n    getanimals();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n       <Header/>\r\n   \r\n    <motion.section className='home' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      <p>These are some active resopnses!</p>\r\n      <div className='cards'>\r\n        {\r\n          ref.current.map((pet, i) => (\r\n            <div key={i} className='card'>\r\n            <img src={pet.img} alt={pet.name} />\r\n            <h4>{pet.name}</h4>\r\n            <ul>\r\n              <li>{pet.phone}</li>\r\n              <li>{pet.email}</li>\r\n              <li>{pet.animalname}</li>\r\n                \r\n              </ul>\r\n            \r\n              <p className='card__city'>{pet.question}</p>\r\n              <Link className='card__contact' to=\"/getuserdetail\"  state={pet}>Get More Details About User</Link>\r\n              <button className='cpb' onClick={() => { handleclick(pet, i); }}>Delete Question</button>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </motion.section >\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Responses;","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\getuserdetails.js",["169","170","171","172"],[],"import React, {  useEffect } from \"react\";\r\nimport useState from 'react-usestateref'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Header from \"../Header\";\r\n\r\nconst Userdetail = (props) => {\r\n  const location = useLocation();\r\n  \r\n\r\n  const propsData = location.state;\r\n  \r\n\r\n const [data,setuserdata,ref]=useState([]);\r\n const [mydata,setmyuserdata,myref]=useState([]);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n  const cookies = new Cookies();\r\n  const token = cookies.get(\"jwtoken\");\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setuserdata(data);\r\n     \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n     \r\n      \r\n    }\r\n  };\r\n\r\n\r\n  const getaboutuser = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/getuser\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify({\r\n          \r\n          email: propsData.email,\r\n        \r\n        }),\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setmyuserdata(data);\r\n     \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n    \r\n      \r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    login();\r\n    getaboutuser();\r\n  }, []);\r\n  \r\n\r\n  \r\n  return (\r\n    <>\r\n       <Header/>\r\n   \r\n    <motion.section className='message' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      {\r\n        \r\n          <>\r\n            <p>These are the details and questions entered by the user:</p>\r\n            <form >\r\n\r\n\r\n            <label htmlFor=\"name\">Name</label>\r\n              <input id='name'  type=\"text\" value={propsData.name}    />\r\n           \r\n\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input id='email'  type=\"text\"  value={propsData.email}   />\r\n             \r\n\r\n\r\n              <label htmlFor=\"phone\">Telephone</label>\r\n              <input type=\"tel\" id='phone'  value={propsData.phone} />\r\n             \r\n\r\n              <label htmlFor=\"animalname\">Name Of animal</label>\r\n              <input id='animalname' type=\"text\"  value={propsData.animalname} />\r\n          \r\n\r\n              <label htmlFor=\"question\">Question</label>\r\n              <textarea name=\"question\" id=\"question\" cols=\"30\" rows=\"10\" value={propsData.question}></textarea>\r\n         \r\n\r\n\r\n              \r\n              <label htmlFor=\"usercity\">UserCity</label>\r\n              <input id='usercity' type=\"text\"  value={myref.current.city} />\r\n             \r\n\r\n              <label htmlFor=\"message\">About User</label>\r\n              <textarea name=\"message\" id=\"message\" cols=\"30\" rows=\"10\" value={myref.current.message}></textarea>\r\n            \r\n\r\n           \r\n            </form>\r\n          </>\r\n        \r\n      }\r\n    </motion.section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Userdetail;\r\n","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\payment.js",["173"],[],"\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { useForm,useController  } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SvgComponent from '../assets/logo-no-background.png'\r\n\r\nimport Button from \"./Button.js\";\r\nimport axios from \"axios\";\r\nimport Swal from 'sweetalert2'\r\nimport Header from \"./Header\";\r\nconst Payment = () => {\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\t\r\n\t\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { errors },\r\n\t\t\r\n\t} = useForm({\r\n\t\tmode: \"onBlur\",\r\n\t\treValidateMode: \"onChange\",\r\n\t});\r\n\r\n\tconst handleOpenRazorpay = (data) => {\r\n\r\n        const options = {\r\n            key:'rzp_test_rGxHmaYvQD7bhS',\r\n            amount: Number(data.amount),\r\n            currency: data.currency,\r\n            order_id: data.id,\r\n            name: 'Paws4You',\r\n            description: 'Serving pets',\r\n            handler: function (response) {\r\n                console.log(response, \"34\")\r\n                axios.post('http://localhost:5000/verify', { response: response })\r\n                    .then(res => {\r\n                        console.log(res, \"37\")\r\n                        Swal.fire({\r\n\t\t\t\t\t\t\ttitle: 'Success!',\r\n\t\t\t\t\t\t\ttext: 'Login Successful',\r\n\t\t\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\t\t\tconfirmButtonText: 'Success',\r\n\t\t\t\t\t\t\ttimer: '2000'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tnavigate(\"/userhome\");\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    })\r\n            }\r\n\r\n        }\r\n        const rzp = new window.Razorpay(options)\r\n        rzp.open()\r\n\t\t\r\n    }\r\n\r\n\t   const onSubmit = (data) => {\r\n\t\tconst {amount}=data;\r\n        const _data = { amount: amount }\r\n        axios.post('http://localhost:5000/orders', _data)\r\n            .then(res => {\r\n                console.log(res.data, \"29\")\r\n                handleOpenRazorpay(res.data.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header/>\r\n\t\t\r\n\t\t<motion.section\r\n\r\n\t\t\tclassName=\"register\"\r\n\t\t\tinitial={{ width: 0 }}\r\n\t\t\tanimate={{ width: \"100%\", transition: { duration: 0.5 } }}\r\n\t\t\texit={{ x: window.innerWidth, transition: { duration: 0.5 } }}\r\n\t\t>\r\n\t\t\t<img src={SvgComponent} alt=\"\" />\r\n\t\t\t\r\n\t\t\t<p>Help us save mankind</p>\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n\t\t\t<label htmlFor=\"amount\">Enter Amount</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"amount\"\r\n\t\t\t\t\ttype=\"Number\"\r\n\t\t\t\t\t{...register(\"amount\", {\r\n\t\t\t\t\t\trequired: \"É necessário informar um endereço de email\",\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tplaceholder=\"0.0\"\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.amount && (\r\n\t\t\t\t\t<p className=\"error\">\r\n\t\t\t\t\t\t{errors.amount.message || \"Por favor, verifique o email digitado\"}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<Button type=\"submit\" children=\"Donate\" />\r\n\t\t\t\t\r\n\t\t\t</form>\r\n\t\t</motion.section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Payment;\r\n","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Userhome.js",["174","175","176"],[],"\r\nimport { Link,useNavigate } from 'react-router-dom';\r\n\r\nimport {  useState ,useEffect} from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport Header from \"./Header\";\r\n\r\nimport { Helmet } from 'react-helmet';\r\nimport useMediaQuery from '../hooks/useMediaQuery';\r\nimport SvgComponent from '../assets/logo-no-background3.png'\r\nimport Spinner from \"./Spinner\"\r\nimport Cookies from \"universal-cookie\";\r\nconst Userhome = () => {\r\n  const matches = useMediaQuery('(max-width: 767px)');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const cookies = new Cookies();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const token = cookies.get(\"jwtoken\");\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setIsLoading(false)   \r\n     \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n     \r\n      \r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    login();\r\n    \r\n  }, []);\r\n \r\n  return (\r\n    <>\r\n  \r\n   <Header/>\r\n    <motion.section className='initial' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      <Helmet>\r\n        <style>{\"body { background-color: #3874ff; }\"}</style>\r\n      </Helmet>\r\n      <img src={SvgComponent} alt=\"Logo AdoPet\" />\r\n      <h3>Welcome!</h3>\r\n      <p>\r\n        {matches ? 'Que tal mudar sua vida adotando seu novo melhor amigo? Vem com a gente!' : 'Adopting can change a life. How about picking up your new best friend today? Come with us!'}\r\n      </p>\r\n      <div className='home__buttons'>\r\n        <Link className='button' to='/pets'>View Pets available</Link>\r\n        <br>\r\n\r\n        </br>\r\n       \r\n        <Link className='button' to='/payment'>Donate</Link>\r\n        \r\n      </div>\r\n    </motion.section >\r\n    </>\r\n   \r\n    \r\n  );\r\n};\r\n\r\nexport default Userhome;","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\Spinner.js",[],[],"C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\Components\\adminPages\\editanimal.js",["177"],[],"import Button from '../Button';\r\nimport React, {  useEffect } from \"react\";\r\nimport useState from 'react-usestateref'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Header from \"../Header\";\r\nimport Swal from 'sweetalert2'\r\nimport loggedUser from '../../assets/usernew.png';\r\n\r\nconst Editanimal = (props) => {\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n  const propsData = location.state;\r\n\r\n const [data,setuserdata,ref]=useState(propsData);\r\n \r\n  const navigate = useNavigate();\r\n  const cookies = new Cookies();\r\n  const token = cookies.get(\"jwtoken\");\r\n  const login = async () => {\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        \r\n      });\r\n     \r\n      if (res.status === 401) {\r\n      \r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n      const data = await res.json();\r\n      console.log(data);\r\n    \r\n     \r\n      \r\n    } catch (err) {\r\n      navigate(\"/login\");\r\n      \r\n   \r\n      \r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    login();\r\n  }, []);\r\n  let name, value;\r\n  const handleEdit = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n    setuserdata({ ...data, [name]: value });\r\n  };\r\n\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    mode: 'onBlur',\r\n    reValidateMode: 'onChange'\r\n  });\r\n\r\n\r\n  \r\n  const handleFileUpload = async (e) => {\r\n  \r\n    const file = e.target.files[0];\r\n    const base64 = await convertToBase64(file);\r\n    console.log(base64)\r\n    setuserdata({ ...data, img : base64 })\r\n    \r\n  }\r\n\r\n  const onSubmit = async(data) => {\r\n   \r\n    \r\n     \r\n    const _id=ref.current._id;\r\n    const name=ref.current.name;\r\n    const img=ref.current.img;\r\n    const city=ref.current.city;\r\n    const behaviour=ref.current.behaviour;\r\n    const size=ref.current.size;\r\n    const age=ref.current.age;\r\n\r\n    \r\n    const res = await fetch(`http://localhost:5000/editanimal/${_id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name:name,\r\n          img:img,\r\n          city:city,\r\n          behaviour:behaviour,\r\n          size:size,\r\n          age:age,\r\n        }),\r\n      });\r\n  \r\n    const dataa = await res.json();\r\n   console.log(dataa);\r\n   \r\n    if(dataa.error||dataa.status === 422 || dataa.status===400|| dataa.status===404||dataa.status===500)\r\n    {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text: 'Some Error occurred',\r\n        icon: 'error',\r\n        confirmButtonText: 'Retry'\r\n        })\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: 'Update Successful',\r\n          icon: 'success',\r\n          confirmButtonText: 'Success',\r\n          timer: '2000'\r\n          })\r\n          navigate(\"/viewanimal\")\r\n      }\r\n      \r\n     \r\n  \r\n    };\r\n\r\n  return (\r\n    <>\r\n    <Header/>\r\n    <motion.section className='message' initial={{ width: 0 }} animate={{ width: \"auto\", transition: { duration: 0.5 } }} exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}>\r\n      {\r\n        \r\n          <>\r\n         \r\n          <p>Edit Animal details:</p>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <label htmlFor=\"img\">\r\n          <img src={ref.current.img||loggedUser} alt=\"\" />\r\n        </label>\r\n\r\n        <input \r\n          type=\"file\"\r\n          name=\"img\"\r\n          id='img'\r\n         \r\n          accept='.jpeg, .png, .jpg'\r\n          {...register('img', { })}\r\n          onChange={(e) => handleFileUpload(e)}\r\n         />\r\n\r\n\r\n              <label htmlFor=\"name\">Name of pet</label>\r\n              <input id='name' type=\"text\" {...register(\"name\", { required: 'Name is required', maxLength: { value: 40, message: 'The maximum number of characters should be 40' } })}value={ref.current.name}  onChange={handleEdit} placeholder='Enter pets name' />\r\n              {errors.name && <p className=\"error\">{errors.name.message}</p>}\r\n              \r\n\r\n\r\n              \r\n\r\n\r\n              \r\n              <label htmlFor=\"city\">city</label>\r\n              <input id='city' type=\"text\" value={ref.current.city} {...register(\"city\", { required: 'City is required',  })} onChange={handleEdit} placeholder='Where does the pet stay?' />\r\n              {errors.city && <p className=\"error\">{errors.city.message}</p>}\r\n\r\n\r\n              <label htmlFor=\"size\">size</label>\r\n              <input id='size' type=\"text\" value={ref.current.size}{...register(\"size\", { required: 'Size is required', maxLength: { value: 40, message: 'The maximum number of characters should be 40' } })} onChange={handleEdit} placeholder='What is the size of pet?' />\r\n              {errors.size && <p className=\"error\">{errors.size.message}</p>}\r\n\r\n\r\n              <label htmlFor=\"age\">Age</label>\r\n              <input id='age' type=\"text\" value={ref.current.age}{...register(\"age\", { required: 'Age is required', maxLength: { value: 25, message: 'The maximum number of characters should be 25' } })} onChange={handleEdit} placeholder='What is the pets age?' />\r\n              {errors.age && <p className=\"error\">{errors.age.message}</p>}\r\n\r\n\r\n              <label htmlFor=\"behaviour\">Behaviour</label>\r\n              <textarea name=\"behaviour\" value={ref.current.behaviour} id=\"behaviour\" cols=\"30\" rows=\"10\" {...register('behaviour', { maxLength: { value: 500, message: 'The maximum number of characters should be 500' } })} onChange={handleEdit} placeholder='Any special behaviour that you want to inform about the pet.' spellCheck='false'></textarea>\r\n              {errors.behaviour && <p className=\"error\">{errors.behaviour.message}</p>}\r\n\r\n             \r\n\r\n              <Button type='submit' children='Submit' />\r\n            </form>\r\n          </>\r\n        \r\n      }\r\n    </motion.section>\r\n    </>\r\n  );\r\n};\r\nfunction convertToBase64(file){\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result)\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\nexport default Editanimal;\r\n\r\n","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\contexts\\usercontext.js",["178","179"],[],"import React, { useEffect, createContext } from 'react';\r\nimport useState from 'react-usestateref'\r\nimport Cookies from \"universal-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst [ currentUser, setCurrentUser,reff ] = useState({\r\n\t\tname: null,\r\n    email: null,\r\n\r\n\t});\r\n\t\r\n\tconst cookies = new Cookies();\r\n\tconst token = cookies.get(\"jwtoken\");\r\n\tuseEffect(() => {\r\n\t\tconst checkLoggedIn = async () => {\r\n\t\t\t\r\n\r\n\t\t\ttry {\r\n\t\t\t\t\t\tconst res = await fetch(\"http://localhost:5000/afterlogin\", {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\theaders: {\r\n\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\tif (res.status === 401) {\r\n      \r\n\t\t\t\tconst error = new Error(res.error);\r\n\t\t\t\tthrow error;\r\n\t\t\t  }\r\n\t\t\t\tconst data = await res.json();\r\n\t\t\t\tconst em=data.email;\r\n\t\t\t\tconst nam=data.name;\r\n\t\t\t\tsetCurrentUser({\r\n\r\n\t\t\t\t\t\tname: nam,\r\n                       email: em,\r\n\t\t\t\t\t});\r\n\t\t\t\t \r\n\t\t\t\t  \r\n\t\t\t\t\r\n\t\t\t  } catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n               // navigate(\"/login\");\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t};\r\n\r\n\t\tcheckLoggedIn();\r\n\t}, []);\r\n\r\n\t\r\n\treturn (\r\n\t\t<UserContext.Provider value={{currentUser, setCurrentUser,reff}}>\r\n\t\t\t{ children}\r\n\t\t</UserContext.Provider>\r\n\t);\r\n};\r\n\r\n\r\nexport default UserContext;","C:\\Users\\win11\\Desktop\\adopet\\frontend\\src\\contexts\\auth.js",[],[],{"ruleId":"180","severity":1,"message":"181","line":1,"column":38,"nodeType":"182","messageId":"183","endLine":1,"endColumn":46},{"ruleId":"180","severity":1,"message":"184","line":3,"column":32,"nodeType":"182","messageId":"183","endLine":3,"endColumn":40},{"ruleId":"180","severity":1,"message":"185","line":21,"column":10,"nodeType":"182","messageId":"183","endLine":21,"endColumn":15},{"ruleId":"186","severity":1,"message":"187","line":76,"column":15,"nodeType":"188","messageId":"189","endLine":76,"endColumn":17},{"ruleId":"180","severity":1,"message":"190","line":10,"column":12,"nodeType":"182","messageId":"183","endLine":10,"endColumn":20},{"ruleId":"180","severity":1,"message":"191","line":70,"column":13,"nodeType":"182","messageId":"183","endLine":70,"endColumn":17},{"ruleId":"192","severity":1,"message":"193","line":93,"column":6,"nodeType":"194","endLine":93,"endColumn":8,"suggestions":"195"},{"ruleId":"186","severity":1,"message":"187","line":57,"column":17,"nodeType":"188","messageId":"189","endLine":57,"endColumn":19},{"ruleId":"186","severity":1,"message":"196","line":57,"column":28,"nodeType":"188","messageId":"189","endLine":57,"endColumn":30},{"ruleId":"186","severity":1,"message":"187","line":140,"column":16,"nodeType":"188","messageId":"189","endLine":140,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":179,"column":18,"nodeType":"199","messageId":"200","endLine":179,"endColumn":19,"suggestions":"201"},{"ruleId":"197","severity":1,"message":"198","line":179,"column":43,"nodeType":"199","messageId":"200","endLine":179,"endColumn":44,"suggestions":"202"},{"ruleId":"180","severity":1,"message":"203","line":18,"column":9,"nodeType":"182","messageId":"183","endLine":18,"endColumn":17},{"ruleId":"192","severity":1,"message":"204","line":59,"column":6,"nodeType":"194","endLine":59,"endColumn":8,"suggestions":"205"},{"ruleId":"180","severity":1,"message":"206","line":10,"column":9,"nodeType":"182","messageId":"183","endLine":10,"endColumn":16},{"ruleId":"180","severity":1,"message":"207","line":29,"column":9,"nodeType":"182","messageId":"183","endLine":29,"endColumn":13},{"ruleId":"180","severity":1,"message":"208","line":29,"column":14,"nodeType":"182","messageId":"183","endLine":29,"endColumn":21},{"ruleId":"192","severity":1,"message":"204","line":87,"column":6,"nodeType":"194","endLine":87,"endColumn":8,"suggestions":"209"},{"ruleId":"192","severity":1,"message":"210","line":39,"column":6,"nodeType":"194","endLine":39,"endColumn":13,"suggestions":"211","suppressions":"212"},{"ruleId":"180","severity":1,"message":"206","line":17,"column":9,"nodeType":"182","messageId":"183","endLine":17,"endColumn":16},{"ruleId":"180","severity":1,"message":"191","line":20,"column":10,"nodeType":"182","messageId":"183","endLine":20,"endColumn":14},{"ruleId":"192","severity":1,"message":"204","line":56,"column":6,"nodeType":"194","endLine":56,"endColumn":8,"suggestions":"213"},{"ruleId":"192","severity":1,"message":"204","line":54,"column":6,"nodeType":"194","endLine":54,"endColumn":8,"suggestions":"214"},{"ruleId":"180","severity":1,"message":"190","line":14,"column":12,"nodeType":"182","messageId":"183","endLine":14,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":150,"column":6,"nodeType":"194","endLine":150,"endColumn":8,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":163,"column":13,"nodeType":"218","endLine":163,"endColumn":46},{"ruleId":"192","severity":1,"message":"204","line":60,"column":6,"nodeType":"194","endLine":60,"endColumn":8,"suggestions":"219"},{"ruleId":"180","severity":1,"message":"190","line":12,"column":12,"nodeType":"182","messageId":"183","endLine":12,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":153,"column":6,"nodeType":"194","endLine":153,"endColumn":8,"suggestions":"220"},{"ruleId":"180","severity":1,"message":"191","line":18,"column":9,"nodeType":"182","messageId":"183","endLine":18,"endColumn":13},{"ruleId":"180","severity":1,"message":"221","line":18,"column":26,"nodeType":"182","messageId":"183","endLine":18,"endColumn":29},{"ruleId":"180","severity":1,"message":"222","line":19,"column":9,"nodeType":"182","messageId":"183","endLine":19,"endColumn":15},{"ruleId":"192","severity":1,"message":"223","line":99,"column":6,"nodeType":"194","endLine":99,"endColumn":8,"suggestions":"224"},{"ruleId":"180","severity":1,"message":"225","line":4,"column":18,"nodeType":"182","messageId":"183","endLine":4,"endColumn":31},{"ruleId":"180","severity":1,"message":"226","line":11,"column":8,"nodeType":"182","messageId":"183","endLine":11,"endColumn":15},{"ruleId":"180","severity":1,"message":"227","line":15,"column":10,"nodeType":"182","messageId":"183","endLine":15,"endColumn":19},{"ruleId":"192","severity":1,"message":"204","line":60,"column":6,"nodeType":"194","endLine":60,"endColumn":8,"suggestions":"228"},{"ruleId":"192","severity":1,"message":"204","line":59,"column":6,"nodeType":"194","endLine":59,"endColumn":8,"suggestions":"229"},{"ruleId":"180","severity":1,"message":"230","line":9,"column":8,"nodeType":"182","messageId":"183","endLine":9,"endColumn":16},{"ruleId":"192","severity":1,"message":"231","line":57,"column":5,"nodeType":"194","endLine":57,"endColumn":7,"suggestions":"232"},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'login' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'petsdata' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getanimals' and 'login'. Either include them or remove the dependency array.","ArrayExpression",["233"],"Expected '!==' and instead saw '!='.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["234","235"],["236","237"],"'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.",["238"],"'matches' is assigned a value but never used.","'auth' is assigned a value but never used.","'setauth' is assigned a value but never used.",["239"],"React Hook useEffect has a missing dependency: 'handleChange'. Either include it or remove the dependency array.",["240"],["241"],["242"],["243"],["244"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["245"],["246"],"'ref' is assigned a value but never used.","'mydata' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getaboutuser' and 'login'. Either include them or remove the dependency array.",["247"],"'useController' is defined but never used.","'Spinner' is defined but never used.","'isLoading' is assigned a value but never used.",["248"],["249"],"'navigate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCurrentUser' and 'token'. Either include them or remove the dependency array.",["250"],{"desc":"251","fix":"252"},{"messageId":"253","fix":"254","desc":"255"},{"messageId":"256","fix":"257","desc":"258"},{"messageId":"253","fix":"259","desc":"255"},{"messageId":"256","fix":"260","desc":"258"},{"desc":"261","fix":"262"},{"desc":"261","fix":"263"},{"desc":"264","fix":"265"},{"kind":"266","justification":"267"},{"desc":"261","fix":"268"},{"desc":"261","fix":"269"},{"desc":"251","fix":"270"},{"desc":"261","fix":"271"},{"desc":"251","fix":"272"},{"desc":"273","fix":"274"},{"desc":"261","fix":"275"},{"desc":"261","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [getanimals, login]",{"range":"279","text":"280"},"removeEscape",{"range":"281","text":"267"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"282","text":"283"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"284","text":"267"},{"range":"285","text":"283"},"Update the dependencies array to be: [login]",{"range":"286","text":"287"},{"range":"288","text":"287"},"Update the dependencies array to be: [handleChange, query]",{"range":"289","text":"290"},"directive","",{"range":"291","text":"287"},{"range":"292","text":"287"},{"range":"293","text":"280"},{"range":"294","text":"287"},{"range":"295","text":"280"},"Update the dependencies array to be: [getaboutuser, login]",{"range":"296","text":"297"},{"range":"298","text":"287"},{"range":"299","text":"287"},"Update the dependencies array to be: [setCurrentUser, token]",{"range":"300","text":"301"},[1982,1984],"[getanimals, login]",[4242,4243],[4242,4242],"\\",[4267,4268],[4267,4267],[1343,1345],"[login]",[1945,1947],[926,933],"[handleChange, query]",[1401,1403],[1297,1299],[3249,3251],[1355,1357],[3348,3350],[2100,2102],"[getaboutuser, login]",[1405,1407],[1450,1452],[1243,1245],"[setCurrentUser, token]"]